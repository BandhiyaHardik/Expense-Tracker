{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\Downloads\\\\MERN-EXPENSES-TRACKER-main\\\\client\\\\src\\\\components\\\\Label.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { default as api } from '../redux/apiSlice';\nimport { addCategoriesToStore, addTransactionsToStore } from '../redux/reduxer';\n\n// const calculateShareFromTransactionType\n\n// TODO : calculate % later, currently set as 0 bu default\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LableComponentJSX = _ref => {\n  let {\n    type,\n    color = 'tomato',\n    percent = '0%'\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"labels flex justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2 h-2 rounded py-3\",\n        style: {\n          backgroundColor: `${color}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg\",\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-bold\",\n      children: percent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n_c = LableComponentJSX;\nconst Label = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    categories: categoriesFromStore,\n    transactions: transactionsFromStore\n  } = useSelector(state => state.expensesReducer);\n  console.log({\n    categoriesFromStore,\n    transactionsFromStore\n  });\n  const {\n    data: categories\n  } = api.useGetCategoriesQuery();\n  const {\n    data: transactions\n  } = api.useGetTransactionsQuery();\n  useEffect(() => {\n    if (categories) {\n      dispatch(addCategoriesToStore(categories));\n    }\n  }, [categories, dispatch]);\n  useEffect(() => {\n    if (transactions) {\n      dispatch(addTransactionsToStore(transactions));\n    }\n  }, [transactions, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: transactionsFromStore.map(label => /*#__PURE__*/_jsxDEV(LableComponentJSX, {\n      // TODO : apply proper key later\n      type: label.type,\n      color: label.color,\n      percent: label.percent\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(Label, \"TUCKmfRzvJE6n19Lua1bJnrr96k=\", false, function () {\n  return [useDispatch, useSelector, api.useGetCategoriesQuery, api.useGetTransactionsQuery];\n});\n_c2 = Label;\nexport default Label;\nvar _c, _c2;\n$RefreshReg$(_c, \"LableComponentJSX\");\n$RefreshReg$(_c2, \"Label\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","default","api","addCategoriesToStore","addTransactionsToStore","LableComponentJSX","type","color","percent","backgroundColor","Label","dispatch","categories","categoriesFromStore","transactions","transactionsFromStore","state","expensesReducer","console","log","data","useGetCategoriesQuery","useGetTransactionsQuery","map","label","Math","random"],"sources":["C:/Users/ankit/Downloads/MERN-EXPENSES-TRACKER-main/client/src/components/Label.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { default as api } from '../redux/apiSlice'\nimport { addCategoriesToStore, addTransactionsToStore } from '../redux/reduxer'\n\n// const calculateShareFromTransactionType\n\n// TODO : calculate % later, currently set as 0 bu default\nconst LableComponentJSX = ({ type, color = 'tomato', percent = '0%' }) => (\n  <div className='labels flex justify-between'>\n    <div className='flex gap-2'>\n      <div\n        className='w-2 h-2 rounded py-3'\n        style={{ backgroundColor: `${color}` }}\n      ></div>\n      <h3 className='text-lg'>{type}</h3>\n    </div>\n    <h3 className='font-bold'>{percent}</h3>\n  </div>\n)\n\nconst Label = () => {\n  const dispatch = useDispatch()\n  const {\n    categories: categoriesFromStore,\n    transactions: transactionsFromStore,\n  } = useSelector(state => state.expensesReducer)\n\n  console.log({ categoriesFromStore, transactionsFromStore })\n\n  const { data: categories } = api.useGetCategoriesQuery()\n  const { data: transactions } = api.useGetTransactionsQuery()\n\n  useEffect(() => {\n    if (categories) {\n      dispatch(addCategoriesToStore(categories))\n    }\n  }, [categories, dispatch])\n\n  useEffect(() => {\n    if (transactions) {\n      dispatch(addTransactionsToStore(transactions))\n    }\n  }, [transactions, dispatch])\n\n  return (\n    <>\n    \n      {transactionsFromStore.map(label => (\n        <LableComponentJSX\n        key={label.id}\n        key={Math.random()} // TODO : apply proper key later\n        type={label.type}\n        color={label.color}\n        percent={label.percent}\n        />\n      ))}\n    </>\n  )\n}\n\nexport default Label"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,OAAO,IAAIC,GAAG,QAAQ,mBAAmB;AAClD,SAASC,oBAAoB,EAAEC,sBAAsB,QAAQ,kBAAkB;;AAE/E;;AAEA;AAAA;AAAA;AACA,MAAMC,iBAAiB,GAAG;EAAA,IAAC;IAAEC,IAAI;IAAEC,KAAK,GAAG,QAAQ;IAAEC,OAAO,GAAG;EAAK,CAAC;EAAA,oBACnE;IAAK,SAAS,EAAC,6BAA6B;IAAA,wBAC1C;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QACE,SAAS,EAAC,sBAAsB;QAChC,KAAK,EAAE;UAAEC,eAAe,EAAG,GAAEF,KAAM;QAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAClC,eACP;QAAI,SAAS,EAAC,SAAS;QAAA,UAAED;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B,eACN;MAAI,SAAS,EAAC,WAAW;MAAA,UAAEE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAAA,CACP;AAAA,KAXKH,iBAAiB;AAavB,MAAMK,KAAK,GAAG,MAAM;EAAA;EAClB,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAM;IACJY,UAAU,EAAEC,mBAAmB;IAC/BC,YAAY,EAAEC;EAChB,CAAC,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,eAAe,CAAC;EAE/CC,OAAO,CAACC,GAAG,CAAC;IAAEN,mBAAmB;IAAEE;EAAsB,CAAC,CAAC;EAE3D,MAAM;IAAEK,IAAI,EAAER;EAAW,CAAC,GAAGV,GAAG,CAACmB,qBAAqB,EAAE;EACxD,MAAM;IAAED,IAAI,EAAEN;EAAa,CAAC,GAAGZ,GAAG,CAACoB,uBAAuB,EAAE;EAE5DxB,SAAS,CAAC,MAAM;IACd,IAAIc,UAAU,EAAE;MACdD,QAAQ,CAACR,oBAAoB,CAACS,UAAU,CAAC,CAAC;IAC5C;EACF,CAAC,EAAE,CAACA,UAAU,EAAED,QAAQ,CAAC,CAAC;EAE1Bb,SAAS,CAAC,MAAM;IACd,IAAIgB,YAAY,EAAE;MAChBH,QAAQ,CAACP,sBAAsB,CAACU,YAAY,CAAC,CAAC;IAChD;EACF,CAAC,EAAE,CAACA,YAAY,EAAEH,QAAQ,CAAC,CAAC;EAE5B,oBACE;IAAA,UAEGI,qBAAqB,CAACQ,GAAG,CAACC,KAAK,iBAC9B,QAAC,iBAAiB;MAEE;MACpB,IAAI,EAAEA,KAAK,CAAClB,IAAK;MACjB,KAAK,EAAEkB,KAAK,CAACjB,KAAM;MACnB,OAAO,EAAEiB,KAAK,CAAChB;IAAQ,GAHlBiB,IAAI,CAACC,MAAM,EAAE;MAAA;MAAA;MAAA;IAAA,QAKnB;EAAC,iBACD;AAEP,CAAC;AAAA,GAtCKhB,KAAK;EAAA,QACQV,WAAW,EAIxBD,WAAW,EAIcG,GAAG,CAACmB,qBAAqB,EACvBnB,GAAG,CAACoB,uBAAuB;AAAA;AAAA,MAVtDZ,KAAK;AAwCX,eAAeA,KAAK;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}