{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\Downloads\\\\MERN-EXPENSES-TRACKER-main\\\\client\\\\src\\\\components\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart, ArcElement } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport Label from './Label';\nimport { useSelector } from 'react-redux';\n//import 'chartjs-plugin-annotation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(ArcElement);\nconst Graph = () => {\n  _s();\n  const transactionsFromStore = useSelector(state => state.expensesReducer.transactions);\n\n  // Calculate the total amount from the remaining transactions\n  const totalAmount = transactionsFromStore.reduce((total, transaction) => total + Number(transaction.amount), 0);\n\n  // Extract the amounts from transactions and labels from types\n  const transactionAmounts = transactionsFromStore.map(transaction => transaction.amount);\n  const transactionTypes = transactionsFromStore.map(transaction => transaction.type);\n\n  // Define a function to calculate the total amount for each type\n  const typeAmounts = {};\n  transactionAmounts.forEach((amount, index) => {\n    const type = transactionTypes[index];\n    if (!typeAmounts[type]) {\n      typeAmounts[type] = 0;\n    }\n    typeAmounts[type] += Number(amount);\n  });\n\n  // Extract unique types and their corresponding amounts\n  const uniqueTypes = Object.keys(typeAmounts);\n  const typeAmountValues = uniqueTypes.map(type => typeAmounts[type]);\n\n  // Define colors for the chart\n  const colors = ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'\n  // Add more colors as needed for additional types\n  ];\n\n  // Create the chart data\n  const chartData = {\n    labels: uniqueTypes,\n    datasets: [{\n      data: typeAmountValues,\n      backgroundColor: colors,\n      hoverOffset: 4\n    }]\n  };\n  const config = {\n    options: {\n      cutout: 100,\n      plugins: {\n        annotation: {\n          annotations: [{\n            type: 'line',\n            mode: 'horizontal',\n            scaleID: 'y-axis-0',\n            value: totalAmount,\n            // Display a horizontal line at the total amount\n            borderColor: 'rgb(75, 192, 192)',\n            borderWidth: 2,\n            label: {\n              enabled: true,\n              content: `Total: ₹${totalAmount}`\n            }\n          }]\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center max-w-xs mx-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart relative\",\n        children: /*#__PURE__*/_jsxDEV(Doughnut, {\n          ...config,\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col py-10 gap-4\",\n        children: /*#__PURE__*/_jsxDEV(Label, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"BXh0uIjX/X1/rAa/dhJiQ94FqFA=\", false, function () {\n  return [useSelector];\n});\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","Chart","ArcElement","Doughnut","Label","useSelector","register","Graph","transactionsFromStore","state","expensesReducer","transactions","totalAmount","reduce","total","transaction","Number","amount","transactionAmounts","map","transactionTypes","type","typeAmounts","forEach","index","uniqueTypes","Object","keys","typeAmountValues","colors","chartData","labels","datasets","data","backgroundColor","hoverOffset","config","options","cutout","plugins","annotation","annotations","mode","scaleID","value","borderColor","borderWidth","label","enabled","content"],"sources":["C:/Users/ankit/Downloads/MERN-EXPENSES-TRACKER-main/client/src/components/Graph.js"],"sourcesContent":["import React from 'react';\nimport { Chart, ArcElement } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport Label from './Label';\nimport { useSelector } from 'react-redux';\n//import 'chartjs-plugin-annotation';\n\nChart.register(ArcElement);\n\nconst Graph = () => {\n  const transactionsFromStore = useSelector((state) => state.expensesReducer.transactions);\n\n  // Calculate the total amount from the remaining transactions\n  const totalAmount = transactionsFromStore.reduce((total, transaction) => total + Number(transaction.amount), 0);\n\n  // Extract the amounts from transactions and labels from types\n  const transactionAmounts = transactionsFromStore.map((transaction) => transaction.amount);\n  const transactionTypes = transactionsFromStore.map((transaction) => transaction.type);\n\n  // Define a function to calculate the total amount for each type\n  const typeAmounts = {};\n  transactionAmounts.forEach((amount, index) => {\n    const type = transactionTypes[index];\n    if (!typeAmounts[type]) {\n      typeAmounts[type] = 0;\n    }\n    typeAmounts[type] += Number(amount);\n  });\n\n  // Extract unique types and their corresponding amounts\n  const uniqueTypes = Object.keys(typeAmounts);\n  const typeAmountValues = uniqueTypes.map((type) => typeAmounts[type]);\n\n  // Define colors for the chart\n  const colors = [\n    'rgb(255, 99, 132)',\n    'rgb(54, 162, 235)',\n    'rgb(255, 205, 86)',\n    // Add more colors as needed for additional types\n  ];\n\n  // Create the chart data\n  const chartData = {\n    labels: uniqueTypes,\n    datasets: [\n      {\n        data: typeAmountValues,\n        backgroundColor: colors,\n        hoverOffset: 4,\n      },\n    ],\n  };\n\n  const config = {\n    options: {\n      cutout: 100,\n      plugins: {\n        annotation: {\n          annotations: [\n            {\n              type: 'line',\n              mode: 'horizontal',\n              scaleID: 'y-axis-0',\n              value: totalAmount, // Display a horizontal line at the total amount\n              borderColor: 'rgb(75, 192, 192)',\n              borderWidth: 2,\n              label: {\n                enabled: true,\n                content: `Total: ₹${totalAmount}`,\n              },\n            },\n          ],\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"flex justify-center max-w-xs mx-auto\">\n      <div className=\"item\">\n        <div className=\"chart relative\">\n          <Doughnut {...config} data={chartData} />\n        </div>\n        <div className=\"flex flex-col py-10 gap-4\">\n          <Label />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Graph;"],"mappings":"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"},"metadata":{},"sourceType":"module"}