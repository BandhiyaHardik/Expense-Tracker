{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  categories: [],\n  transactions: []\n};\nconst expensesReducer = createSlice({\n  name: 'expensesReducer',\n  initialState,\n  reducers: {\n    addCategoriesToStore: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.categories = payload;\n    },\n    addTransactionsToStore: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.transactions = payload;\n    },\n    deleteTransaction: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      // Implement the logic to delete a transaction from state.transactions\n      // You might want to filter the transactions array to exclude the deleted transaction\n      state.transactions = state.transactions.filter(transaction => transaction._id !== payload);\n    }\n  }\n});\nexport default expensesReducer.reducer;\nexport const {\n  addCategoriesToStore,\n  addTransactionsToStore,\n  deleteTransaction\n} = expensesReducer.actions;","map":{"version":3,"names":["createSlice","initialState","categories","transactions","expensesReducer","name","reducers","addCategoriesToStore","state","payload","addTransactionsToStore","deleteTransaction","filter","transaction","_id","reducer","actions"],"sources":["D:/Task-1 Expense Tracker/server/client/src/redux/reduxer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  categories: [],\n  transactions: [],\n};\n\nconst expensesReducer = createSlice({\n  name: 'expensesReducer',\n  initialState,\n  reducers: {\n    addCategoriesToStore: (state, { payload }) => {\n      state.categories = payload;\n    },\n    addTransactionsToStore: (state, { payload }) => {\n      state.transactions = payload;\n    },\n    deleteTransaction: (state, { payload }) => {\n      // Implement the logic to delete a transaction from state.transactions\n      // You might want to filter the transactions array to exclude the deleted transaction\n      state.transactions = state.transactions.filter((transaction) => transaction._id !== payload);\n    },\n  },\n});\n\nexport default expensesReducer.reducer;\nexport const { addCategoriesToStore, addTransactionsToStore, deleteTransaction } = expensesReducer.actions;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,EAAE;EACdC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,eAAe,GAAGJ,WAAW,CAAC;EAClCK,IAAI,EAAE,iBAAiB;EACvBJ,YAAY;EACZK,QAAQ,EAAE;IACRC,oBAAoB,EAAE,CAACC,KAAK,WAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;MACvCD,KAAK,CAACN,UAAU,GAAGO,OAAO;IAC5B,CAAC;IACDC,sBAAsB,EAAE,CAACF,KAAK,YAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;MACzCD,KAAK,CAACL,YAAY,GAAGM,OAAO;IAC9B,CAAC;IACDE,iBAAiB,EAAE,CAACH,KAAK,YAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;MACpC;MACA;MACAD,KAAK,CAACL,YAAY,GAAGK,KAAK,CAACL,YAAY,CAACS,MAAM,CAAEC,WAAW,IAAKA,WAAW,CAACC,GAAG,KAAKL,OAAO,CAAC;IAC9F;EACF;AACF,CAAC,CAAC;AAEF,eAAeL,eAAe,CAACW,OAAO;AACtC,OAAO,MAAM;EAAER,oBAAoB;EAAEG,sBAAsB;EAAEC;AAAkB,CAAC,GAAGP,eAAe,CAACY,OAAO"},"metadata":{},"sourceType":"module"}