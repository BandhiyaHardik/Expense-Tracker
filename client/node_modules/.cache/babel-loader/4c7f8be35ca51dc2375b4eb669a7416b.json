{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\Downloads\\\\MERN-EXPENSES-TRACKER-main\\\\client\\\\src\\\\components\\\\List.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteTransaction } from '../redux/reduxer'; // Import the action to delete a transaction\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst listCollection = [{\n  _id: '1',\n  // Add unique identifiers for each item (should match the transaction IDs)\n  name: 'Savings',\n  color: 'rgb(255, 99, 132)',\n  id: 1\n}, {\n  _id: '2',\n  name: 'Investments',\n  color: 'rgb(54, 162, 235)',\n  id: 2\n}, {\n  _id: '3',\n  name: 'Expenses',\n  color: 'rgb(255, 205, 86)',\n  id: 3\n}];\nconst TransactionsHistoryJSX = _ref => {\n  let {\n    id,\n    name,\n    color,\n    onDelete\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item flex justify-between bg-gray-50 py-2 rounded-r\",\n      style: {\n        borderRight: `8px solid ${color}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"block w-full\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(id) // Call the onDelete function with the ID on button click\n        ,\n        className: \"px-3 bg-slate-600 rounded-lg text-white\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = TransactionsHistoryJSX;\nconst List = () => {\n  _s();\n  const dispatch = useDispatch();\n\n  // Define a state to keep track of the list of items\n  const [items, setItems] = useState(listCollection);\n\n  // Function to handle item deletion\n  const handleDelete = id => {\n    // Remove the item from the state\n    const updatedItems = items.filter(item => item._id !== id);\n    setItems(updatedItems);\n\n    // Dispatch an action to delete the item from the Redux store (and potentially the database)\n    dispatch(deleteTransaction(id));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col py-6 gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"py-4 font-bold text-xl\",\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), items.map(item => /*#__PURE__*/_jsxDEV(TransactionsHistoryJSX, {\n        id: item._id,\n        name: item.name,\n        color: item.color,\n        onDelete: handleDelete // Pass the onDelete function to the child component\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(List, \"I/6F54AIel3DdzfPh1UtcU3wKiI=\", false, function () {\n  return [useDispatch];\n});\n_c2 = List;\nexport default List;\nvar _c, _c2;\n$RefreshReg$(_c, \"TransactionsHistoryJSX\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"names":["React","useState","useDispatch","deleteTransaction","listCollection","_id","name","color","id","TransactionsHistoryJSX","onDelete","borderRight","List","dispatch","items","setItems","handleDelete","updatedItems","filter","item","map"],"sources":["C:/Users/ankit/Downloads/MERN-EXPENSES-TRACKER-main/client/src/components/List.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteTransaction } from '../redux/reduxer'; // Import the action to delete a transaction\n\nconst listCollection = [\n  {\n    _id: '1', // Add unique identifiers for each item (should match the transaction IDs)\n    name: 'Savings',\n    color: 'rgb(255, 99, 132)',\n    id: 1,\n  },\n  {\n    _id: '2',\n    name: 'Investments',\n    color: 'rgb(54, 162, 235)',\n    id: 2,\n  },\n  {\n    _id: '3',\n    name: 'Expenses',\n    color: 'rgb(255, 205, 86)',\n    id: 3,\n  },\n];\n\nconst TransactionsHistoryJSX = ({ id, name, color, onDelete }) => (\n  <>\n    <div\n      className=\"item flex justify-between bg-gray-50 py-2 rounded-r\"\n      style={{ borderRight: `8px solid ${color}` }}\n    >\n      <span className=\"block w-full\">{name}</span>\n      <button\n        onClick={() => onDelete(id)} // Call the onDelete function with the ID on button click\n        className=\"px-3 bg-slate-600 rounded-lg text-white\"\n      >\n        Delete\n      </button>\n    </div>\n  </>\n);\n\nconst List = () => {\n  const dispatch = useDispatch();\n\n  // Define a state to keep track of the list of items\n  const [items, setItems] = useState(listCollection);\n\n  // Function to handle item deletion\n  const handleDelete = (id) => {\n    // Remove the item from the state\n    const updatedItems = items.filter((item) => item._id !== id);\n    setItems(updatedItems);\n\n    // Dispatch an action to delete the item from the Redux store (and potentially the database)\n    dispatch(deleteTransaction(id));\n  };\n\n  return (\n    <>\n      <div className=\"flex flex-col py-6 gap-3\">\n        <h1 className=\"py-4 font-bold text-xl\">History</h1>\n        {items.map((item) => (\n          <TransactionsHistoryJSX\n            key={item.id}\n            id={item._id}\n            name={item.name}\n            color={item.color}\n            onDelete={handleDelete} // Pass the onDelete function to the child component\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default List;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,QAAQ,kBAAkB,CAAC,CAAC;AAAA;AAAA;AAEtD,MAAMC,cAAc,GAAG,CACrB;EACEC,GAAG,EAAE,GAAG;EAAE;EACVC,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,mBAAmB;EAC1BC,EAAE,EAAE;AACN,CAAC,EACD;EACEH,GAAG,EAAE,GAAG;EACRC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,mBAAmB;EAC1BC,EAAE,EAAE;AACN,CAAC,EACD;EACEH,GAAG,EAAE,GAAG;EACRC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE,mBAAmB;EAC1BC,EAAE,EAAE;AACN,CAAC,CACF;AAED,MAAMC,sBAAsB,GAAG;EAAA,IAAC;IAAED,EAAE;IAAEF,IAAI;IAAEC,KAAK;IAAEG;EAAS,CAAC;EAAA,oBAC3D;IAAA,uBACE;MACE,SAAS,EAAC,qDAAqD;MAC/D,KAAK,EAAE;QAAEC,WAAW,EAAG,aAAYJ,KAAM;MAAE,CAAE;MAAA,wBAE7C;QAAM,SAAS,EAAC,cAAc;QAAA,UAAED;MAAI;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC5C;QACE,OAAO,EAAE,MAAMI,QAAQ,CAACF,EAAE,CAAE,CAAC;QAAA;QAC7B,SAAS,EAAC,yCAAyC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAG5C;IAAA;MAAA;MAAA;MAAA;IAAA;EACL,iBACL;AAAA,CACJ;AAAC,KAfIC,sBAAsB;AAiB5B,MAAMG,IAAI,GAAG,MAAM;EAAA;EACjB,MAAMC,QAAQ,GAAGX,WAAW,EAAE;;EAE9B;EACA,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACG,cAAc,CAAC;;EAElD;EACA,MAAMY,YAAY,GAAIR,EAAE,IAAK;IAC3B;IACA,MAAMS,YAAY,GAAGH,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACd,GAAG,KAAKG,EAAE,CAAC;IAC5DO,QAAQ,CAACE,YAAY,CAAC;;IAEtB;IACAJ,QAAQ,CAACV,iBAAiB,CAACK,EAAE,CAAC,CAAC;EACjC,CAAC;EAED,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,0BAA0B;MAAA,wBACvC;QAAI,SAAS,EAAC,wBAAwB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAa,EAClDM,KAAK,CAACM,GAAG,CAAED,IAAI,iBACd,QAAC,sBAAsB;QAErB,EAAE,EAAEA,IAAI,CAACd,GAAI;QACb,IAAI,EAAEc,IAAI,CAACb,IAAK;QAChB,KAAK,EAAEa,IAAI,CAACZ,KAAM;QAClB,QAAQ,EAAES,YAAa,CAAC;MAAA,GAJnBG,IAAI,CAACX,EAAE;QAAA;QAAA;QAAA;MAAA,QAMf,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EACE,iBACL;AAEP,CAAC;AAAC,GAhCII,IAAI;EAAA,QACSV,WAAW;AAAA;AAAA,MADxBU,IAAI;AAkCV,eAAeA,IAAI;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}