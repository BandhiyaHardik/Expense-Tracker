{"ast":null,"code":"import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';var baseURL=\"\".concat(window.location.origin,\"/api\");var apiSlice=createApi({baseQuery:fetchBaseQuery({baseUrl:baseURL}),endpoints:function endpoints(builder){return{// get categories\ngetCategories:builder.query({query:function query(){return'/categories';}// builder.query() by default uses GET method\n}),// get transactions\ngetTransactions:builder.query({query:function query(){return'/transaction';}// builder.query() by default uses GET method\n}),// add new transaction\naddTransaction:builder.mutation({query:function query(userInputValues){return{url:'/transaction',// URL should not use template literals\nmethod:'POST',body:userInputValues};}}),// ...\ndeleteTransaction:builder.mutation({query:function query(transactionID){return{url:\"/transaction/\".concat(transactionID),// Correctly interpolate the transactionID\nmethod:'DELETE'};}})};}});export default apiSlice;","map":{"version":3,"names":["createApi","fetchBaseQuery","baseURL","window","location","origin","apiSlice","baseQuery","baseUrl","endpoints","builder","getCategories","query","getTransactions","addTransaction","mutation","userInputValues","url","method","body","deleteTransaction","transactionID"],"sources":["D:/Task-1 Expense Tracker/client/src/redux/apiSlice.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nconst baseURL = `${window.location.origin}/api`\n\nconst apiSlice = createApi({\n  baseQuery: fetchBaseQuery({ baseUrl: baseURL }),\n  endpoints: builder => ({\n    // get categories\n    getCategories: builder.query({\n      query: () => '/categories', // builder.query() by default uses GET method\n    }),\n\n    // get transactions\n    getTransactions: builder.query({\n      query: () => '/transaction', // builder.query() by default uses GET method\n    }),\n\n    // add new transaction\n    addTransaction: builder.mutation({\n      query: userInputValues => ({\n        url: '/transaction', // URL should not use template literals\n        method: 'POST',\n        body: userInputValues,\n      }),\n    }),\n    // ...\n    deleteTransaction: builder.mutation({\n      query: transactionID => ({\n        url: `/transaction/${transactionID}`, // Correctly interpolate the transactionID\n        method: 'DELETE',\n      }),\n    }),\n  }),\n})\n\n\nexport default apiSlice\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,cAAc,KAAQ,8BAA8B,CAExE,GAAMC,QAAO,WAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,QAAM,CAE/C,GAAMC,SAAQ,CAAGN,SAAS,CAAC,CACzBO,SAAS,CAAEN,cAAc,CAAC,CAAEO,OAAO,CAAEN,OAAQ,CAAC,CAAC,CAC/CO,SAAS,CAAE,mBAAAC,OAAO,QAAK,CACrB;AACAC,aAAa,CAAED,OAAO,CAACE,KAAK,CAAC,CAC3BA,KAAK,CAAE,uBAAM,aAAa,EAAE;AAC9B,CAAC,CAAC,CAEF;AACAC,eAAe,CAAEH,OAAO,CAACE,KAAK,CAAC,CAC7BA,KAAK,CAAE,uBAAM,cAAc,EAAE;AAC/B,CAAC,CAAC,CAEF;AACAE,cAAc,CAAEJ,OAAO,CAACK,QAAQ,CAAC,CAC/BH,KAAK,CAAE,eAAAI,eAAe,QAAK,CACzBC,GAAG,CAAE,cAAc,CAAE;AACrBC,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEH,eACR,CAAC,EACH,CAAC,CAAC,CACF;AACAI,iBAAiB,CAAEV,OAAO,CAACK,QAAQ,CAAC,CAClCH,KAAK,CAAE,eAAAS,aAAa,QAAK,CACvBJ,GAAG,wBAAkBI,aAAa,CAAE,CAAE;AACtCH,MAAM,CAAE,QACV,CAAC,EACH,CAAC,CACH,CAAC,EACH,CAAC,CAAC,CAGF,cAAeZ,SAAQ"},"metadata":{},"sourceType":"module"}