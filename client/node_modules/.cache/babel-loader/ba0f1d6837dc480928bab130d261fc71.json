{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\Downloads\\\\MERN-EXPENSES-TRACKER-main\\\\client\\\\src\\\\components\\\\Label.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { default as api } from '../redux/apiSlice';\nimport { addCategoriesToStore, addTransactionsToStore } from '../redux/reduxer';\n\n// const calculateShareFromTransactionType\n\n// TODO : calculate % later, currently set as 0 by default\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LableComponentJSX = _ref => {\n  let {\n    type,\n    color = 'tomato',\n    percent = '0%'\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"labels flex justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2 h-2 rounded py-3\",\n        style: {\n          backgroundColor: `${color}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg\",\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-bold\",\n      children: percent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n_c = LableComponentJSX;\nconst Label = () => {\n  _s2();\n  const dispatch = useDispatch();\n  const {\n    categories: categoriesFromStore,\n    transactions: transactionsFromStore\n  } = useSelector(state => state.expensesReducer);\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    const fetchData = async () => {\n      _s();\n      try {\n        const {\n          data: categories\n        } = await api.useGetCategoriesQuery();\n        if (categories) {\n          dispatch(addCategoriesToStore(categories));\n        }\n      } catch (error) {\n        console.error('Error fetching categories:', error.message);\n      }\n      try {\n        const {\n          data: transactions\n        } = await api.useGetTransactionsQuery();\n        if (transactions) {\n          dispatch(addTransactionsToStore(transactions));\n        }\n      } catch (error) {\n        console.error('Error fetching transactions:', error.message);\n      }\n    };\n    _s(fetchData, \"lhA/CJGmThP8oyudVsmR87Mjg9E=\", false, function () {\n      return [api.useGetCategoriesQuery, api.useGetTransactionsQuery];\n    });\n    fetchData();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: transactionsFromStore.map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(LableComponentJSX, {\n        type: label.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: categoriesFromStore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, Math.random(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s2(Label, \"eQBWtYAkGCQl7csqa81Y3M68fsE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c2 = Label;\nexport default Label;\nvar _c, _c2;\n$RefreshReg$(_c, \"LableComponentJSX\");\n$RefreshReg$(_c2, \"Label\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","default","api","addCategoriesToStore","addTransactionsToStore","LableComponentJSX","type","color","percent","backgroundColor","Label","dispatch","categories","categoriesFromStore","transactions","transactionsFromStore","state","expensesReducer","fetchData","data","useGetCategoriesQuery","error","console","message","useGetTransactionsQuery","map","label","Math","random"],"sources":["C:/Users/ankit/Downloads/MERN-EXPENSES-TRACKER-main/client/src/components/Label.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { default as api } from '../redux/apiSlice'\nimport { addCategoriesToStore, addTransactionsToStore } from '../redux/reduxer'\n\n// const calculateShareFromTransactionType\n\n// TODO : calculate % later, currently set as 0 by default\nconst LableComponentJSX = ({ type, color = 'tomato', percent = '0%' }) => (\n  <div className='labels flex justify-between'>\n    <div className='flex gap-2'>\n      <div\n        className='w-2 h-2 rounded py-3'\n        style={{ backgroundColor: `${color}` }}\n      ></div>\n      <h3 className='text-lg'>{type}</h3>\n    </div>\n    <h3 className='font-bold'>{percent}</h3>\n  </div>\n)\n\nconst Label = () => {\n  const dispatch = useDispatch();\n  const { categories: categoriesFromStore, transactions: transactionsFromStore } = useSelector(state => state.expensesReducer);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const { data: categories } = await api.useGetCategoriesQuery();\n        if (categories) {\n          dispatch(addCategoriesToStore(categories));\n        }\n      } catch (error) {\n        console.error('Error fetching categories:', error.message);\n      }\n\n      try {\n        const { data: transactions } = await api.useGetTransactionsQuery();\n        if (transactions) {\n          dispatch(addTransactionsToStore(transactions));\n        }\n      } catch (error) {\n        console.error('Error fetching transactions:', error.message);\n      }\n    };\n\n    fetchData();\n  }, [dispatch]);\n\n  return (\n    <>\n      {transactionsFromStore.map(label => (\n        <div key={Math.random()}>\n          <LableComponentJSX type={label.type} />\n          {/* Display categoriesFromStore here */}\n          <div>{categoriesFromStore}</div>\n        </div>\n      ))}\n    </>\n  );\n  \n}\n\nexport default Label\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,IAAIC,GAAG,QAAQ,mBAAmB;AAClD,SAASC,oBAAoB,EAAEC,sBAAsB,QAAQ,kBAAkB;;AAE/E;;AAEA;AAAA;AAAA;AACA,MAAMC,iBAAiB,GAAG;EAAA,IAAC;IAAEC,IAAI;IAAEC,KAAK,GAAG,QAAQ;IAAEC,OAAO,GAAG;EAAK,CAAC;EAAA,oBACnE;IAAK,SAAS,EAAC,6BAA6B;IAAA,wBAC1C;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QACE,SAAS,EAAC,sBAAsB;QAChC,KAAK,EAAE;UAAEC,eAAe,EAAG,GAAEF,KAAM;QAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAClC,eACP;QAAI,SAAS,EAAC,SAAS;QAAA,UAAED;MAAI;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B,eACN;MAAI,SAAS,EAAC,WAAW;MAAA,UAAEE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAAA,CACP;AAAA,KAXKH,iBAAiB;AAavB,MAAMK,KAAK,GAAG,MAAM;EAAA;EAClB,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAM;IAAEY,UAAU,EAAEC,mBAAmB;IAAEC,YAAY,EAAEC;EAAsB,CAAC,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,eAAe,CAAC;EAE5HnB,SAAS,CAAC,MAAM;IAAA;IACd,MAAMoB,SAAS,GAAG,YAAY;MAAA;MAC5B,IAAI;QACF,MAAM;UAAEC,IAAI,EAAEP;QAAW,CAAC,GAAG,MAAMV,GAAG,CAACkB,qBAAqB,EAAE;QAC9D,IAAIR,UAAU,EAAE;UACdD,QAAQ,CAACR,oBAAoB,CAACS,UAAU,CAAC,CAAC;QAC5C;MACF,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC5D;MAEA,IAAI;QACF,MAAM;UAAEJ,IAAI,EAAEL;QAAa,CAAC,GAAG,MAAMZ,GAAG,CAACsB,uBAAuB,EAAE;QAClE,IAAIV,YAAY,EAAE;UAChBH,QAAQ,CAACP,sBAAsB,CAACU,YAAY,CAAC,CAAC;QAChD;MACF,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC9D;IACF,CAAC;IAAC,GAlBIL,SAAS;MAAA,QAEwBhB,GAAG,CAACkB,qBAAqB,EASvBlB,GAAG,CAACsB,uBAAuB;IAAA;IASpEN,SAAS,EAAE;EACb,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,oBACE;IAAA,UACGI,qBAAqB,CAACU,GAAG,CAACC,KAAK,iBAC9B;MAAA,wBACE,QAAC,iBAAiB;QAAC,IAAI,EAAEA,KAAK,CAACpB;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eAEvC;QAAA,UAAMO;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA,GAHxBc,IAAI,CAACC,MAAM,EAAE;MAAA;MAAA;MAAA;IAAA,QAKxB;EAAC,iBACD;AAGP,CAAC;AAAA,IAxCKlB,KAAK;EAAA,QACQV,WAAW,EACqDD,WAAW;AAAA;AAAA,MAFxFW,KAAK;AA0CX,eAAeA,KAAK;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}