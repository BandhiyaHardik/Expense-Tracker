{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ankit\\\\Downloads\\\\MERN-EXPENSES-TRACKER-main\\\\client\\\\src\\\\components\\\\Label.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { default as api } from '../redux/apiSlice';\nimport { addCategoriesToStore, addTransactionsToStore } from '../redux/reduxer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LableComponentJSX = _ref => {\n  let {\n    type,\n    color = 'tomato',\n    percent = '0%'\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"labels flex justify-between\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2 h-2 rounded py-3\",\n        style: {\n          backgroundColor: `${color}`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg\",\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-bold\",\n      children: percent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n_c = LableComponentJSX;\nconst Label = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    transactions: transactionsFromStore\n  } = useSelector(state => state.expensesReducer);\n  const {\n    data: categories\n  } = api.useGetCategoriesQuery();\n  const {\n    data: transactions\n  } = api.useGetTransactionsQuery();\n  useEffect(() => {\n    if (categories) {\n      dispatch(addCategoriesToStore(categories));\n    }\n  }, [categories, dispatch]);\n  useEffect(() => {\n    if (transactions) {\n      dispatch(addTransactionsToStore(transactions));\n    }\n  }, [transactions, dispatch]);\n\n  // Calculate the total amount for each category\n  const categoryTotals = {};\n  transactionsFromStore.forEach(transaction => {\n    const {\n      categoryId,\n      amount\n    } = transaction;\n    categoryTotals[categoryId] = (categoryTotals[categoryId] || 0) + amount;\n  });\n\n  // Calculate the percentage for each transaction and store it in a map\n  const transactionPercentages = {};\n  transactionsFromStore.forEach(transaction => {\n    const {\n      categoryId,\n      amount\n    } = transaction;\n    const totalAmount = categoryTotals[categoryId];\n    const percentage = totalAmount ? (amount / totalAmount * 100).toFixed(2) + '%' : '0%';\n    transactionPercentages[transaction._id] = percentage;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: transactionsFromStore.map(label => /*#__PURE__*/_jsxDEV(LableComponentJSX, {\n      // TODO: Apply proper key later\n      type: label.type,\n      percent: transactionPercentages[label._id] || '0%' // Get the percentage from the map\n    }, Math.random(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(Label, \"9+4CDOXd2X3VcYxrZAOIfR1jNkE=\", false, function () {\n  return [useDispatch, useSelector, api.useGetCategoriesQuery, api.useGetTransactionsQuery];\n});\n_c2 = Label;\nexport default Label;\nvar _c, _c2;\n$RefreshReg$(_c, \"LableComponentJSX\");\n$RefreshReg$(_c2, \"Label\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","default","api","addCategoriesToStore","addTransactionsToStore","LableComponentJSX","type","color","percent","backgroundColor","Label","dispatch","transactions","transactionsFromStore","state","expensesReducer","data","categories","useGetCategoriesQuery","useGetTransactionsQuery","categoryTotals","forEach","transaction","categoryId","amount","transactionPercentages","totalAmount","percentage","toFixed","_id","map","label","Math","random"],"sources":["C:/Users/ankit/Downloads/MERN-EXPENSES-TRACKER-main/client/src/components/Label.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { default as api } from '../redux/apiSlice';\nimport { addCategoriesToStore, addTransactionsToStore } from '../redux/reduxer';\n\nconst LableComponentJSX = ({ type, color = 'tomato', percent = '0%' }) => (\n  <div className='labels flex justify-between'>\n    <div className='flex gap-2'>\n      <div className='w-2 h-2 rounded py-3' style={{ backgroundColor: `${color}` }}></div>\n      <h3 className='text-lg'>{type}</h3>\n    </div>\n    <h3 className='font-bold'>{percent}</h3>\n  </div>\n);\n\nconst Label = () => {\n  const dispatch = useDispatch();\n  const { transactions: transactionsFromStore } = useSelector(state => state.expensesReducer);\n\n  const { data: categories } = api.useGetCategoriesQuery();\n  const { data: transactions } = api.useGetTransactionsQuery();\n\n  useEffect(() => {\n    if (categories) {\n      dispatch(addCategoriesToStore(categories));\n    }\n  }, [categories, dispatch]);\n\n  useEffect(() => {\n    if (transactions) {\n      dispatch(addTransactionsToStore(transactions));\n    }\n  }, [transactions, dispatch]);\n\n  // Calculate the total amount for each category\n  const categoryTotals = {};\n  transactionsFromStore.forEach(transaction => {\n    const { categoryId, amount } = transaction;\n    categoryTotals[categoryId] = (categoryTotals[categoryId] || 0) + amount;\n  });\n\n  // Calculate the percentage for each transaction and store it in a map\n  const transactionPercentages = {};\n  transactionsFromStore.forEach(transaction => {\n    const { categoryId, amount } = transaction;\n    const totalAmount = categoryTotals[categoryId];\n    const percentage = totalAmount ? ((amount / totalAmount) * 100).toFixed(2) + '%' : '0%';\n    transactionPercentages[transaction._id] = percentage;\n  });\n\n  return (\n    <>\n      {transactionsFromStore.map(label => (\n        <LableComponentJSX\n          key={Math.random()} // TODO: Apply proper key later\n          type={label.type}\n          percent={transactionPercentages[label._id] || '0%'} // Get the percentage from the map\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Label;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}