{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var initialState={categories:[],transactions:[]};var expensesReducer=createSlice({name:'expensesReducer',initialState:initialState,reducers:{addCategoriesToStore:function addCategoriesToStore(state,_ref){var payload=_ref.payload;state.categories=payload;},addTransactionsToStore:function addTransactionsToStore(state,_ref2){var payload=_ref2.payload;state.transactions=payload;},deleteTransaction:function deleteTransaction(state,_ref3){var payload=_ref3.payload;// Implement the logic to delete a transaction from state.transactions\n// You might want to filter the transactions array to exclude the deleted transaction\nstate.transactions=state.transactions.filter(function(transaction){return transaction._id!==payload;});}}});export default expensesReducer.reducer;var _expensesReducer$acti=expensesReducer.actions,addCategoriesToStore=_expensesReducer$acti.addCategoriesToStore,addTransactionsToStore=_expensesReducer$acti.addTransactionsToStore,deleteTransaction=_expensesReducer$acti.deleteTransaction;export{addCategoriesToStore,addTransactionsToStore,deleteTransaction};","map":{"version":3,"names":["createSlice","initialState","categories","transactions","expensesReducer","name","reducers","addCategoriesToStore","state","payload","addTransactionsToStore","deleteTransaction","filter","transaction","_id","reducer","actions"],"sources":["D:/Task-1 Expense Tracker/client/src/redux/reduxer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  categories: [],\n  transactions: [],\n};\n\nconst expensesReducer = createSlice({\n  name: 'expensesReducer',\n  initialState,\n  reducers: {\n    addCategoriesToStore: (state, { payload }) => {\n      state.categories = payload;\n    },\n    addTransactionsToStore: (state, { payload }) => {\n      state.transactions = payload;\n    },\n    deleteTransaction: (state, { payload }) => {\n      // Implement the logic to delete a transaction from state.transactions\n      // You might want to filter the transactions array to exclude the deleted transaction\n      state.transactions = state.transactions.filter((transaction) => transaction._id !== payload);\n    },\n  },\n});\n\nexport default expensesReducer.reducer;\nexport const { addCategoriesToStore, addTransactionsToStore, deleteTransaction } = expensesReducer.actions;\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,GAAMC,aAAY,CAAG,CACnBC,UAAU,CAAE,EAAE,CACdC,YAAY,CAAE,EAChB,CAAC,CAED,GAAMC,gBAAe,CAAGJ,WAAW,CAAC,CAClCK,IAAI,CAAE,iBAAiB,CACvBJ,YAAY,CAAZA,YAAY,CACZK,QAAQ,CAAE,CACRC,oBAAoB,CAAE,8BAACC,KAAK,MAAkB,IAAdC,QAAO,MAAPA,OAAO,CACrCD,KAAK,CAACN,UAAU,CAAGO,OAAO,CAC5B,CAAC,CACDC,sBAAsB,CAAE,gCAACF,KAAK,OAAkB,IAAdC,QAAO,OAAPA,OAAO,CACvCD,KAAK,CAACL,YAAY,CAAGM,OAAO,CAC9B,CAAC,CACDE,iBAAiB,CAAE,2BAACH,KAAK,OAAkB,IAAdC,QAAO,OAAPA,OAAO,CAClC;AACA;AACAD,KAAK,CAACL,YAAY,CAAGK,KAAK,CAACL,YAAY,CAACS,MAAM,CAAC,SAACC,WAAW,QAAKA,YAAW,CAACC,GAAG,GAAKL,OAAO,GAAC,CAC9F,CACF,CACF,CAAC,CAAC,CAEF,cAAeL,gBAAe,CAACW,OAAO,CAC/B,0BAA4EX,eAAe,CAACY,OAAO,CAA3FT,oBAAoB,uBAApBA,oBAAoB,CAAEG,sBAAsB,uBAAtBA,sBAAsB,CAAEC,iBAAiB,uBAAjBA,iBAAiB,CAA6B"},"metadata":{},"sourceType":"module"}