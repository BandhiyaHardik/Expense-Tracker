{"ast":null,"code":"import React,{useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{default as api}from'../redux/apiSlice';import{addCategoriesToStore,addTransactionsToStore}from'../redux/reduxer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var LableComponentJSX=function LableComponentJSX(_ref){var type=_ref.type,color=_ref.color,percent=_ref.percent;return/*#__PURE__*/_jsxs(\"div\",{className:\"labels flex justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-2 h-2 rounded py-3\",style:{backgroundColor:\"\".concat(color)}}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg\",children:type})]}),/*#__PURE__*/_jsx(\"h3\",{className:\"font-bold\",children:percent})]});};var Label=function Label(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.expensesReducer;}),transactionsFromStore=_useSelector.transactions;var _api$useGetCategories=api.useGetCategoriesQuery(),categories=_api$useGetCategories.data;var _api$useGetTransactio=api.useGetTransactionsQuery(),transactions=_api$useGetTransactio.data;useEffect(function(){if(categories){dispatch(addCategoriesToStore(categories));}},[categories,dispatch]);useEffect(function(){if(transactions){dispatch(addTransactionsToStore(transactions));}},[transactions,dispatch]);// Calculate the total amount for each category\nvar categoryTotals={};transactionsFromStore.forEach(function(transaction){var categoryId=transaction.categoryId,amount=transaction.amount;categoryTotals[categoryId]=(categoryTotals[categoryId]||0)+amount;});// Calculate the percentage for each transaction and store it in a map\nvar transactionPercentages={};transactionsFromStore.forEach(function(transaction){var categoryId=transaction.categoryId,amount=transaction.amount;var totalAmount=categoryTotals[categoryId];var percentage=totalAmount?(amount/totalAmount*100).toFixed(2)+'%':'0%';transactionPercentages[transaction._id]=percentage;});return/*#__PURE__*/_jsx(_Fragment,{children:transactionsFromStore.map(function(label){return/*#__PURE__*/_jsx(LableComponentJSX,{// TODO: Apply proper key later\ntype:label.type,percent:transactionPercentages[label._id]||'0%'// Get the percentage from the map\n},Math.random());})});};export default Label;","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","default","api","addCategoriesToStore","addTransactionsToStore","LableComponentJSX","type","color","percent","backgroundColor","Label","dispatch","state","expensesReducer","transactionsFromStore","transactions","useGetCategoriesQuery","categories","data","useGetTransactionsQuery","categoryTotals","forEach","transaction","categoryId","amount","transactionPercentages","totalAmount","percentage","toFixed","_id","map","label","Math","random"],"sources":["D:/Task-1 Expense Tracker/client/src/components/Label.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { default as api } from '../redux/apiSlice';\nimport { addCategoriesToStore, addTransactionsToStore } from '../redux/reduxer';\n\nconst LableComponentJSX = ({ type, color , percent }) => (\n  <div className='labels flex justify-between'>\n    <div className='flex gap-2'>\n      <div className='w-2 h-2 rounded py-3' style={{ backgroundColor: `${color}` }}></div>\n      <h3 className='text-lg'>{type}</h3>\n    </div>\n    <h3 className='font-bold'>{percent}</h3>\n  </div>\n);\n\nconst Label = () => {\n  const dispatch = useDispatch();\n  const { transactions: transactionsFromStore } = useSelector(state => state.expensesReducer);\n\n  const { data: categories } = api.useGetCategoriesQuery();\n  const { data: transactions } = api.useGetTransactionsQuery();\n\n  useEffect(() => {\n    if (categories) {\n      dispatch(addCategoriesToStore(categories));\n    }\n  }, [categories, dispatch]);\n\n  useEffect(() => {\n    if (transactions) {\n      dispatch(addTransactionsToStore(transactions));\n    }\n  }, [transactions, dispatch]);\n\n  // Calculate the total amount for each category\n  const categoryTotals = {};\n  transactionsFromStore.forEach(transaction => {\n    const { categoryId, amount } = transaction;\n    categoryTotals[categoryId] = (categoryTotals[categoryId] || 0) + amount;\n  });\n\n  // Calculate the percentage for each transaction and store it in a map\n  const transactionPercentages = {};\n  transactionsFromStore.forEach(transaction => {\n    const { categoryId, amount } = transaction;\n    const totalAmount = categoryTotals[categoryId];\n    const percentage = totalAmount ? ((amount / totalAmount) * 100).toFixed(2) + '%' : '0%';\n    transactionPercentages[transaction._id] = percentage;\n  });\n\n  return (\n    <>\n      {transactionsFromStore.map(label => (\n        <LableComponentJSX\n          key={Math.random()} // TODO: Apply proper key later\n          type={label.type}\n          percent={transactionPercentages[label._id] || '0%'} // Get the percentage from the map\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Label;\n"],"mappings":"AAAA,MAAOA,MAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CACtD,OAASC,OAAO,GAAIC,IAAG,KAAQ,mBAAmB,CAClD,OAASC,oBAAoB,CAAEC,sBAAsB,KAAQ,kBAAkB,CAAC,6IAEhF,GAAMC,kBAAiB,CAAG,QAApBA,kBAAiB,UAAMC,KAAI,MAAJA,IAAI,CAAEC,KAAK,MAALA,KAAK,CAAGC,OAAO,MAAPA,OAAO,oBAChD,aAAK,SAAS,CAAC,6BAA6B,wBAC1C,aAAK,SAAS,CAAC,YAAY,wBACzB,YAAK,SAAS,CAAC,sBAAsB,CAAC,KAAK,CAAE,CAAEC,eAAe,WAAKF,KAAK,CAAG,CAAE,EAAO,cACpF,WAAI,SAAS,CAAC,SAAS,UAAED,IAAI,EAAM,GAC/B,cACN,WAAI,SAAS,CAAC,WAAW,UAAEE,OAAO,EAAM,GACpC,EACP,CAED,GAAME,MAAK,CAAG,QAARA,MAAK,EAAS,CAClB,GAAMC,SAAQ,CAAGX,WAAW,EAAE,CAC9B,iBAAgDD,WAAW,CAAC,SAAAa,KAAK,QAAIA,MAAK,CAACC,eAAe,GAAC,CAArEC,qBAAqB,cAAnCC,YAAY,CAEpB,0BAA6Bb,GAAG,CAACc,qBAAqB,EAAE,CAA1CC,UAAU,uBAAhBC,IAAI,CACZ,0BAA+BhB,GAAG,CAACiB,uBAAuB,EAAE,CAA9CJ,YAAY,uBAAlBG,IAAI,CAEZpB,SAAS,CAAC,UAAM,CACd,GAAImB,UAAU,CAAE,CACdN,QAAQ,CAACR,oBAAoB,CAACc,UAAU,CAAC,CAAC,CAC5C,CACF,CAAC,CAAE,CAACA,UAAU,CAAEN,QAAQ,CAAC,CAAC,CAE1Bb,SAAS,CAAC,UAAM,CACd,GAAIiB,YAAY,CAAE,CAChBJ,QAAQ,CAACP,sBAAsB,CAACW,YAAY,CAAC,CAAC,CAChD,CACF,CAAC,CAAE,CAACA,YAAY,CAAEJ,QAAQ,CAAC,CAAC,CAE5B;AACA,GAAMS,eAAc,CAAG,CAAC,CAAC,CACzBN,qBAAqB,CAACO,OAAO,CAAC,SAAAC,WAAW,CAAI,CAC3C,GAAQC,WAAU,CAAaD,WAAW,CAAlCC,UAAU,CAAEC,MAAM,CAAKF,WAAW,CAAtBE,MAAM,CAC1BJ,cAAc,CAACG,UAAU,CAAC,CAAG,CAACH,cAAc,CAACG,UAAU,CAAC,EAAI,CAAC,EAAIC,MAAM,CACzE,CAAC,CAAC,CAEF;AACA,GAAMC,uBAAsB,CAAG,CAAC,CAAC,CACjCX,qBAAqB,CAACO,OAAO,CAAC,SAAAC,WAAW,CAAI,CAC3C,GAAQC,WAAU,CAAaD,WAAW,CAAlCC,UAAU,CAAEC,MAAM,CAAKF,WAAW,CAAtBE,MAAM,CAC1B,GAAME,YAAW,CAAGN,cAAc,CAACG,UAAU,CAAC,CAC9C,GAAMI,WAAU,CAAGD,WAAW,CAAG,CAAEF,MAAM,CAAGE,WAAW,CAAI,GAAG,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAG,GAAG,CAAG,IAAI,CACvFH,sBAAsB,CAACH,WAAW,CAACO,GAAG,CAAC,CAAGF,UAAU,CACtD,CAAC,CAAC,CAEF,mBACE,yBACGb,qBAAqB,CAACgB,GAAG,CAAC,SAAAC,KAAK,qBAC9B,KAAC,iBAAiB,EACI;AACpB,IAAI,CAAEA,KAAK,CAACzB,IAAK,CACjB,OAAO,CAAEmB,sBAAsB,CAACM,KAAK,CAACF,GAAG,CAAC,EAAI,IAAM;AAAA,EAF/CG,IAAI,CAACC,MAAM,EAAE,CAGlB,EACH,CAAC,EACD,CAEP,CAAC,CAED,cAAevB,MAAK"},"metadata":{},"sourceType":"module"}